using System.Diagnostics;
using System.Text;

namespace Otterkit.Runtime;

public static class RuntimeHelpers
{
    public static DateTime New_date(Numeric int_fmt)
    {
        DateTime Y1600 = new(1600, 12, 31);
        int days = int.Parse(int_fmt.Display);

        DateTime integer_date = Y1600.AddDays(days);

        return integer_date;
    }

    // WARNING: Do not edit this manually, the method is generated using the GenerateFetchExceptionIndex below.
    public static int FetchExceptionIndex(ReadOnlySpan<byte> name)
    {
        return name switch
        {
            [69,67,45,65,76,76] => 0,
            [69,67,45,65,82,71,85,77,69,78,84] => 1,
            [69,67,45,65,82,71,85,77,69,78,84,45,70,85,78,67,84,73,79,78] => 2,
            [69,67,45,65,82,71,85,77,69,78,84,45,73,77,80] => 3,
            [69,67,45,66,79,85,78,68] => 4,
            [69,67,45,66,79,85,78,68,45,70,85,78,67,45,82,69,84,45,86,65,76,85,69] => 5,
            [69,67,45,66,79,85,78,68,45,73,77,80] => 6,
            [69,67,45,66,79,85,78,68,45,79,68,79] => 7,
            [69,67,45,66,79,85,78,68,45,79,86,69,82,70,76,79,87] => 8,
            [69,67,45,66,79,85,78,68,45,80,84,82] => 9,
            [69,67,45,66,79,85,78,68,45,82,69,70,45,77,79,68] => 10,
            [69,67,45,66,79,85,78,68,45,83,69,84] => 11,
            [69,67,45,66,79,85,78,68,45,83,85,66,83,67,82,73,80,84] => 12,
            [69,67,45,66,79,85,78,68,45,84,65,66,76,69,45,76,73,77,73,84] => 13,
            [69,67,45,67,79,78,84,73,78,85,69] => 14,
            [69,67,45,67,79,78,84,73,78,85,69,45,73,77,80] => 15,
            [69,67,45,67,79,78,84,73,78,85,69,45,76,69,83,83,45,84,72,65,78,45,90,69,82,79] => 16,
            [69,67,45,68,65,84,65] => 17,
            [69,67,45,68,65,84,65,45,67,79,78,86,69,82,83,73,79,78] => 18,
            [69,67,45,68,65,84,65,45,73,77,80] => 19,
            [69,67,45,68,65,84,65,45,73,78,67,79,77,80,65,84,73,66,76,69] => 20,
            [69,67,45,68,65,84,65,45,78,79,84,45,70,73,78,73,84,69] => 21,
            [69,67,45,68,65,84,65,45,79,86,69,82,70,76,79,87] => 22,
            [69,67,45,68,65,84,65,45,80,84,82,45,78,85,76,76] => 23,
            [69,67,45,69,88,84,69,82,78,65,76] => 24,
            [69,67,45,69,88,84,69,82,78,65,76,45,68,65,84,65,45,77,73,83,77,65,84,67,72] => 25,
            [69,67,45,69,88,84,69,82,78,65,76,45,70,73,76,69,45,77,73,83,77,65,84,67,72] => 26,
            [69,67,45,69,88,84,69,82,78,65,76,45,70,79,82,77,65,84,45,67,79,78,70,76,73,67,84] => 27,
            [69,67,45,69,88,84,69,82,78,65,76,45,73,77,80] => 28,
            [69,67,45,70,76,79,87] => 29,
            [69,67,45,70,76,79,87,45,65,80,80,76,89,45,67,79,77,77,73,84] => 30,
            [69,67,45,70,76,79,87,45,67,79,77,77,73,84] => 31,
            [69,67,45,70,76,79,87,45,71,76,79,66,65,76,45,69,88,73,84] => 32,
            [69,67,45,70,76,79,87,45,71,76,79,66,65,76,45,71,79,66,65,67,75] => 33,
            [69,67,45,70,76,79,87,45,73,77,80] => 34,
            [69,67,45,70,76,79,87,45,82,69,76,69,65,83,69] => 35,
            [69,67,45,70,76,79,87,45,82,69,80,79,82,84] => 36,
            [69,67,45,70,76,79,87,45,82,69,84,85,82,78] => 37,
            [69,67,45,70,76,79,87,45,82,79,76,76,66,65,67,75] => 38,
            [69,67,45,70,76,79,87,45,83,69,65,82,67,72] => 39,
            [69,67,45,70,76,79,87,45,85,83,69] => 40,
            [69,67,45,70,85,78,67,84,73,79,78] => 41,
            [69,67,45,70,85,78,67,84,73,79,78,45,65,82,71,45,79,77,73,84,84,69,68] => 42,
            [69,67,45,70,85,78,67,84,73,79,78,45,73,77,80] => 43,
            [69,67,45,70,85,78,67,84,73,79,78,45,78,79,84,45,70,79,85,78,68] => 44,
            [69,67,45,70,85,78,67,84,73,79,78,45,80,84,82,45,73,78,86,65,76,73,68] => 45,
            [69,67,45,70,85,78,67,84,73,79,78,45,80,84,82,45,78,85,76,76] => 46,
            [69,67,45,73,45,79] => 47,
            [69,67,45,73,45,79,45,65,84,45,69,78,68] => 48,
            [69,67,45,73,45,79,45,69,79,80] => 49,
            [69,67,45,73,45,79,45,69,79,80,45,79,86,69,82,70,76,79,87] => 50,
            [69,67,45,73,45,79,45,70,73,76,69,45,83,72,65,82,73,78,71] => 51,
            [69,67,45,73,45,79,45,73,77,80] => 52,
            [69,67,45,73,45,79,45,73,78,86,65,76,73,68,45,75,69,89] => 53,
            [69,67,45,73,45,79,45,76,73,78,65,71,69] => 54,
            [69,67,45,73,45,79,45,76,79,71,73,67,45,69,82,82,79,82] => 55,
            [69,67,45,73,45,79,45,80,69,82,77,65,78,69,78,84,45,69,82,82,79,82] => 56,
            [69,67,45,73,45,79,45,82,69,67,79,82,68,45,67,79,78,84,69,78,84] => 57,
            [69,67,45,73,45,79,45,82,69,67,79,82,68,45,79,80,69,82,65,84,73,79,78] => 58,
            [69,67,45,73,45,79,45,87,65,82,78,73,78,71] => 59,
            [69,67,45,73,77,80] => 60,
            [69,67,45,73,77,80,45,115,117,102,102,105,120] => 61,
            [69,67,45,76,79,67,65,76,69] => 62,
            [69,67,45,76,79,67,65,76,69,45,73,77,80] => 63,
            [69,67,45,76,79,67,65,76,69,45,73,78,67,79,77,80,65,84,73,66,76,69] => 64,
            [69,67,45,76,79,67,65,76,69,45,73,78,86,65,76,73,68] => 65,
            [69,67,45,76,79,67,65,76,69,45,73,78,86,65,76,73,68,45,80,84,82] => 66,
            [69,67,45,76,79,67,65,76,69,45,77,73,83,83,73,78,71] => 67,
            [69,67,45,76,79,67,65,76,69,45,83,73,90,69] => 68,
            [69,67,45,77,67,83] => 69,
            [69,67,45,77,67,83,45,65,66,78,79,82,77,65,76,45,84,69,82,77,73,78,65,84,73,79,78] => 70,
            [69,67,45,77,67,83,45,73,77,80] => 71,
            [69,67,45,77,67,83,45,73,78,86,65,76,73,68,45,84,65,71] => 72,
            [69,67,45,77,67,83,45,77,69,83,83,65,71,69,45,76,69,78,71,84,72] => 73,
            [69,67,45,77,67,83,45,78,79,45,82,69,81,85,69,83,84,69,82] => 74,
            [69,67,45,77,67,83,45,78,79,45,83,69,82,86,69,82] => 75,
            [69,67,45,77,67,83,45,78,79,82,77,65,76,45,84,69,82,77,73,78,65,84,73,79,78] => 76,
            [69,67,45,77,67,83,45,82,69,81,85,69,83,84,79,82,45,70,65,73,76,69,68] => 77,
            [69,67,45,79,79] => 78,
            [69,67,45,79,79,45,65,82,71,45,79,77,73,84,84,69,68] => 79,
            [69,67,45,79,79,45,67,79,78,70,79,82,77,65,78,67,69] => 80,
            [69,67,45,79,79,45,69,88,67,69,80,84,73,79,78] => 81,
            [69,67,45,79,79,45,73,77,80] => 82,
            [69,67,45,79,79,45,77,69,84,72,79,68] => 83,
            [69,67,45,79,79,45,78,85,76,76] => 84,
            [69,67,45,79,79,45,82,69,83,79,85,82,67,69] => 85,
            [69,67,45,79,79,45,85,78,73,86,69,82,83,65,76] => 86,
            [69,67,45,79,82,68,69,82] => 87,
            [69,67,45,79,82,68,69,82,45,73,77,80] => 88,
            [69,67,45,79,82,68,69,82,45,78,79,84,45,83,85,80,80,79,82,84,69,68] => 89,
            [69,67,45,79,86,69,82,70,76,79,87] => 90,
            [69,67,45,79,86,69,82,70,76,79,87,45,73,77,80] => 91,
            [69,67,45,79,86,69,82,70,76,79,87,45,83,84,82,73,78,71] => 92,
            [69,67,45,79,86,69,82,70,76,79,87,45,85,78,83,84,82,73,78,71] => 93,
            [69,67,45,80,82,79,71,82,65,77] => 94,
            [69,67,45,80,82,79,71,82,65,77,45,65,82,71,45,77,73,83,77,65,84,67,72] => 95,
            [69,67,45,80,82,79,71,82,65,77,45,65,82,71,45,79,77,73,84,84,69,68] => 96,
            [69,67,45,80,82,79,71,82,65,77,45,67,65,78,67,69,76,45,65,67,84,73,86,69] => 97,
            [69,67,45,80,82,79,71,82,65,77,45,73,77,80] => 98,
            [69,67,45,80,82,79,71,82,65,77,45,78,79,84,45,70,79,85,78,68] => 99,
            [69,67,45,80,82,79,71,82,65,77,45,80,84,82,45,78,85,76,76] => 100,
            [69,67,45,80,82,79,71,82,65,77,45,82,69,67,85,82,83,73,86,69,45,67,65,76,76] => 101,
            [69,67,45,80,82,79,71,82,65,77,45,82,69,83,79,85,82,67,69,83] => 102,
            [69,67,45,82,65,73,83,73,78,71] => 103,
            [69,67,45,82,65,73,83,73,78,71,45,73,77,80] => 104,
            [69,67,45,82,65,73,83,73,78,71,45,78,79,84,45,83,80,69,67,73,70,73,69,68] => 105,
            [69,67,45,82,65,78,71,69] => 106,
            [69,67,45,82,65,78,71,69,45,73,77,80] => 107,
            [69,67,45,82,65,78,71,69,45,73,78,68,69,88] => 108,
            [69,67,45,82,65,78,71,69,45,73,78,83,80,69,67,84,45,83,73,90,69] => 109,
            [69,67,45,82,65,78,71,69,45,73,78,86,65,76,73,68] => 110,
            [69,67,45,82,65,78,71,69,45,80,69,82,70,79,82,77,45,86,65,82,89,73,78,71] => 111,
            [69,67,45,82,65,78,71,69,45,80,84,82] => 112,
            [69,67,45,82,65,78,71,69,45,83,69,65,82,67,72,45,73,78,68,69,88] => 113,
            [69,67,45,82,65,78,71,69,45,83,69,65,82,67,72,45,78,79,45,77,65,84,67,72] => 114,
            [69,67,45,82,69,80,79,82,84] => 115,
            [69,67,45,82,69,80,79,82,84,45,65,67,84,73,86,69] => 116,
            [69,67,45,82,69,80,79,82,84,45,67,79,76,85,77,78,45,79,86,69,82,76,65,80] => 117,
            [69,67,45,82,69,80,79,82,84,45,70,73,76,69,45,77,79,68,69] => 118,
            [69,67,45,82,69,80,79,82,84,45,73,77,80] => 119,
            [69,67,45,82,69,80,79,82,84,45,73,78,65,67,84,73,86,69] => 120,
            [69,67,45,82,69,80,79,82,84,45,76,73,78,69,45,79,86,69,82,76,65,80] => 121,
            [69,67,45,82,69,80,79,82,84,45,78,79,84,45,84,69,82,77,73,78,65,84,69,68] => 122,
            [69,67,45,82,69,80,79,82,84,45,80,65,71,69,45,76,73,77,73,84] => 123,
            [69,67,45,82,69,80,79,82,84,45,80,65,71,69,45,87,73,68,84,72] => 124,
            [69,67,45,82,69,80,79,82,84,45,83,85,77,45,83,73,90,69] => 125,
            [69,67,45,82,69,80,79,82,84,45,86,65,82,89,73,78,71] => 126,
            [69,67,45,83,67,82,69,69,78] => 127,
            [69,67,45,83,67,82,69,69,78,45,70,73,69,76,68,45,79,86,69,82,76,65,80] => 128,
            [69,67,45,83,67,82,69,69,78,45,73,77,80] => 129,
            [69,67,45,83,67,82,69,69,78,45,73,84,69,77,45,84,82,85,78,67,65,84,69,68] => 130,
            [69,67,45,83,67,82,69,69,78,45,76,73,78,69,45,78,85,77,66,69,82] => 131,
            [69,67,45,83,67,82,69,69,78,45,83,84,65,82,84,73,78,71,45,67,79,76,85,77,78] => 132,
            [69,67,45,83,73,90,69] => 133,
            [69,67,45,83,73,90,69,45,65,68,68,82,69,83,83] => 134,
            [69,67,45,83,73,90,69,45,69,88,80,79,78,69,78,84,73,65,84,73,79,78] => 135,
            [69,67,45,83,73,90,69,45,73,77,80] => 136,
            [69,67,45,83,73,90,69,45,79,86,69,82,70,76,79,87] => 137,
            [69,67,45,83,73,90,69,45,84,82,85,78,67,65,84,73,79,78] => 138,
            [69,67,45,83,73,90,69,45,85,78,68,69,82,70,76,79,87] => 139,
            [69,67,45,83,73,90,69,45,90,69,82,79,45,68,73,86,73,68,69] => 140,
            [69,67,45,83,79,82,84,45,77,69,82,71,69] => 141,
            [69,67,45,83,79,82,84,45,77,69,82,71,69,45,65,67,84,73,86,69] => 142,
            [69,67,45,83,79,82,84,45,77,69,82,71,69,45,70,73,76,69,45,79,80,69,78] => 143,
            [69,67,45,83,79,82,84,45,77,69,82,71,69,45,73,77,80] => 144,
            [69,67,45,83,79,82,84,45,77,69,82,71,69,45,82,69,76,69,65,83,69] => 145,
            [69,67,45,83,79,82,84,45,77,69,82,71,69,45,82,69,84,85,82,78] => 146,
            [69,67,45,83,79,82,84,45,77,69,82,71,69,45,83,69,81,85,69,78,67,69] => 147,
            [69,67,45,83,84,79,82,65,71,69] => 148,
            [69,67,45,83,84,79,82,65,71,69,45,73,77,80] => 149,
            [69,67,45,83,84,79,82,65,71,69,45,78,79,84,45,65,76,76,79,67] => 150,
            [69,67,45,83,84,79,82,65,71,69,45,78,79,84,45,65,86,65,73,76] => 151,
            [69,67,45,85,83,69,82] => 152,
            [69,67,45,85,83,69,82,45,115,117,102,102,105,120] => 153,
            [69,67,45,86,65,76,73,68,65,84,69] => 154,
            [69,67,45,86,65,76,73,68,65,84,69,45,67,79,78,84,69,78,84] => 155,
            [69,67,45,86,65,76,73,68,65,84,69,45,70,79,82,77,65,84] => 156,
            [69,67,45,86,65,76,73,68,65,84,69,45,73,77,80] => 157,
            [69,67,45,86,65,76,73,68,65,84,69,45,82,69,76,65,84,73,79,78] => 158,
            [69,67,45,86,65,76,73,68,65,84,69,45,86,65,82,89,73,78,71] => 159,
            _ => -5
        };
    }

    public static void GenerateFetchExceptionIndex()
    {
        Console.WriteLine("    public static int FetchExceptionIndex(ReadOnlySpan<byte> name)");
        Console.WriteLine("    {");
        Console.WriteLine("        return name switch");
        Console.WriteLine("        {");

        GenerateSwitchLookup(
            "EC-ALL",
            "EC-ARGUMENT",
            "EC-ARGUMENT-FUNCTION",
            "EC-ARGUMENT-IMP",
            "EC-BOUND",
            "EC-BOUND-FUNC-RET-VALUE",
            "EC-BOUND-IMP",
            "EC-BOUND-ODO",
            "EC-BOUND-OVERFLOW",
            "EC-BOUND-PTR",
            "EC-BOUND-REF-MOD",
            "EC-BOUND-SET",
            "EC-BOUND-SUBSCRIPT",
            "EC-BOUND-TABLE-LIMIT",
            "EC-CONTINUE",
            "EC-CONTINUE-IMP",
            "EC-CONTINUE-LESS-THAN-ZERO",
            "EC-DATA",
            "EC-DATA-CONVERSION",
            "EC-DATA-IMP",
            "EC-DATA-INCOMPATIBLE",
            "EC-DATA-NOT-FINITE",
            "EC-DATA-OVERFLOW",
            "EC-DATA-PTR-NULL",
            "EC-EXTERNAL",
            "EC-EXTERNAL-DATA-MISMATCH",
            "EC-EXTERNAL-FILE-MISMATCH",
            "EC-EXTERNAL-FORMAT-CONFLICT",
            "EC-EXTERNAL-IMP",
            "EC-FLOW",
            "EC-FLOW-APPLY-COMMIT",
            "EC-FLOW-COMMIT",
            "EC-FLOW-GLOBAL-EXIT",
            "EC-FLOW-GLOBAL-GOBACK",
            "EC-FLOW-IMP",
            "EC-FLOW-RELEASE",
            "EC-FLOW-REPORT",
            "EC-FLOW-RETURN",
            "EC-FLOW-ROLLBACK",
            "EC-FLOW-SEARCH",
            "EC-FLOW-USE",
            "EC-FUNCTION",
            "EC-FUNCTION-ARG-OMITTED",
            "EC-FUNCTION-IMP",
            "EC-FUNCTION-NOT-FOUND",
            "EC-FUNCTION-PTR-INVALID",
            "EC-FUNCTION-PTR-NULL",
            "EC-I-O",
            "EC-I-O-AT-END",
            "EC-I-O-EOP",
            "EC-I-O-EOP-OVERFLOW",
            "EC-I-O-FILE-SHARING",
            "EC-I-O-IMP",
            "EC-I-O-INVALID-KEY",
            "EC-I-O-LINAGE",
            "EC-I-O-LOGIC-ERROR",
            "EC-I-O-PERMANENT-ERROR",
            "EC-I-O-RECORD-CONTENT",
            "EC-I-O-RECORD-OPERATION",
            "EC-I-O-WARNING",
            "EC-IMP",
            "EC-IMP-suffix",
            "EC-LOCALE",
            "EC-LOCALE-IMP",
            "EC-LOCALE-INCOMPATIBLE",
            "EC-LOCALE-INVALID",
            "EC-LOCALE-INVALID-PTR",
            "EC-LOCALE-MISSING",
            "EC-LOCALE-SIZE",
            "EC-MCS",
            "EC-MCS-ABNORMAL-TERMINATION",
            "EC-MCS-IMP",
            "EC-MCS-INVALID-TAG",
            "EC-MCS-MESSAGE-LENGTH",
            "EC-MCS-NO-REQUESTER",
            "EC-MCS-NO-SERVER",
            "EC-MCS-NORMAL-TERMINATION",
            "EC-MCS-REQUESTOR-FAILED",
            "EC-OO",
            "EC-OO-ARG-OMITTED",
            "EC-OO-CONFORMANCE",
            "EC-OO-EXCEPTION",
            "EC-OO-IMP",
            "EC-OO-METHOD",
            "EC-OO-NULL",
            "EC-OO-RESOURCE",
            "EC-OO-UNIVERSAL",
            "EC-ORDER",
            "EC-ORDER-IMP",
            "EC-ORDER-NOT-SUPPORTED",
            "EC-OVERFLOW",
            "EC-OVERFLOW-IMP",
            "EC-OVERFLOW-STRING",
            "EC-OVERFLOW-UNSTRING",
            "EC-PROGRAM",
            "EC-PROGRAM-ARG-MISMATCH",
            "EC-PROGRAM-ARG-OMITTED",
            "EC-PROGRAM-CANCEL-ACTIVE",
            "EC-PROGRAM-IMP",
            "EC-PROGRAM-NOT-FOUND",
            "EC-PROGRAM-PTR-NULL",
            "EC-PROGRAM-RECURSIVE-CALL",
            "EC-PROGRAM-RESOURCES",
            "EC-RAISING",
            "EC-RAISING-IMP",
            "EC-RAISING-NOT-SPECIFIED",
            "EC-RANGE",
            "EC-RANGE-IMP",
            "EC-RANGE-INDEX",
            "EC-RANGE-INSPECT-SIZE",
            "EC-RANGE-INVALID",
            "EC-RANGE-PERFORM-VARYING",
            "EC-RANGE-PTR",
            "EC-RANGE-SEARCH-INDEX",
            "EC-RANGE-SEARCH-NO-MATCH",
            "EC-REPORT",
            "EC-REPORT-ACTIVE",
            "EC-REPORT-COLUMN-OVERLAP",
            "EC-REPORT-FILE-MODE",
            "EC-REPORT-IMP",
            "EC-REPORT-INACTIVE",
            "EC-REPORT-LINE-OVERLAP",
            "EC-REPORT-NOT-TERMINATED",
            "EC-REPORT-PAGE-LIMIT",
            "EC-REPORT-PAGE-WIDTH",
            "EC-REPORT-SUM-SIZE",
            "EC-REPORT-VARYING",
            "EC-SCREEN",
            "EC-SCREEN-FIELD-OVERLAP",
            "EC-SCREEN-IMP",
            "EC-SCREEN-ITEM-TRUNCATED",
            "EC-SCREEN-LINE-NUMBER",
            "EC-SCREEN-STARTING-COLUMN",
            "EC-SIZE",
            "EC-SIZE-ADDRESS",
            "EC-SIZE-EXPONENTIATION",
            "EC-SIZE-IMP",
            "EC-SIZE-OVERFLOW",
            "EC-SIZE-TRUNCATION",
            "EC-SIZE-UNDERFLOW",
            "EC-SIZE-ZERO-DIVIDE",
            "EC-SORT-MERGE",
            "EC-SORT-MERGE-ACTIVE",
            "EC-SORT-MERGE-FILE-OPEN",
            "EC-SORT-MERGE-IMP",
            "EC-SORT-MERGE-RELEASE",
            "EC-SORT-MERGE-RETURN",
            "EC-SORT-MERGE-SEQUENCE",
            "EC-STORAGE",
            "EC-STORAGE-IMP",
            "EC-STORAGE-NOT-ALLOC",
            "EC-STORAGE-NOT-AVAIL",
            "EC-USER",
            "EC-USER-suffix",
            "EC-VALIDATE",
            "EC-VALIDATE-CONTENT",
            "EC-VALIDATE-FORMAT",
            "EC-VALIDATE-IMP",
            "EC-VALIDATE-RELATION",
            "EC-VALIDATE-VARYING"
        );

        Console.WriteLine("            _ => -5");
        Console.WriteLine("        };");
        Console.WriteLine("    }");
    }

    public static void GenerateSwitchLookup(params string[] strings)
    {
        Span<byte> span = stackalloc byte[64];

        span.Fill(0);

        for (int i = 0; i < strings.Length; i++)
        {
            ReadOnlySpan<char> name = strings[i].ToUpperInvariant();

            var length = Encoding.UTF8.GetBytes(name, span);

            Console.Write("            [");

            for (int j = 0; j < length; j++)
            {
                var _byte = span[j];

                if (_byte == 0) break;

                if (_byte > 96 && _byte < 123) span[j] ^= 0x20;

                if (j == length - 1)
                {
                    Console.Write($"{_byte}");
                    break;
                }

                Console.Write($"{_byte},");
            }

            Console.WriteLine($"] => {i},");

            span.Fill(0);
        }
    }
}
